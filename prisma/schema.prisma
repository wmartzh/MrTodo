// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubscriptionType {
  FREE
  PREMIUM
}

enum TaskState {
  ACTIVE
  ARCHIVED
  DELETED
  DRAFT
}

model User {
  id           Int           @id @default(autoincrement())
  username     String
  email        String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime
  subscription Subscription?
  subject      Subject[]
  task         Task[]
}

model Subscription {
  id             Int              @id @default(autoincrement())
  type           SubscriptionType @default(FREE)
  detail         String?
  expirationDate DateTime
  lastRenew      DateTime
  userId         Int              @unique
  user           User             @relation(fields: [userId], references: [id])
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  dueDate     DateTime?
  state       TaskState @default(DRAFT)
  grade       Decimal?
  userId      Int
  subjectId   Int?
  subject     Subject?  @relation(fields: [subjectId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
}

model Subject {
  id        Int      @id @default(autoincrement())
  name      String
  detail    String?
  color     String?
  userId    Int
  rubricId  Int?
  rubric    Rubric?  @relation(fields: [rubricId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime
  Task      Task[]
}

model Rubric {
  id         Int       @id @default(autoincrement())
  name       String
  percentage Decimal?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
  subject    Subject[]
}
